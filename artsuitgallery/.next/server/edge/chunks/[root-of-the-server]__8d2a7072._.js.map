{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\nimport { verify } from 'jsonwebtoken';\r\n\r\n// Admin yolları için middleware\r\nexport async function middleware(request: NextRequest) {\r\n  const path = request.nextUrl.pathname;\r\n  \r\n  // Admin sayfalarını koruma\r\n  if (path.startsWith('/admin') && path !== '/admin/login') {\r\n    const token = request.cookies.get('auth_token')?.value;\r\n    \r\n    // Token yoksa login sayfasına yönlendir\r\n    if (!token) {\r\n      return NextResponse.redirect(new URL('/admin/login', request.url));\r\n    }\r\n    \r\n    try {\r\n      // Token doğrulaması yap\r\n      verify(\r\n        token,\r\n        process.env.JWT_SECRET || 'default-secret-key'\r\n      );\r\n      \r\n      // Token geçerliyse devam et\r\n      return NextResponse.next();\r\n    } catch (error) {\r\n      // Token geçersizse login sayfasına yönlendir\r\n      console.error('Token doğrulama hatası:', error);\r\n      return NextResponse.redirect(new URL('/admin/login', request.url));\r\n    }\r\n  }\r\n  \r\n  // Login sayfasındaysa ve token geçerliyse admin anasayfasına yönlendir\r\n  if (path === '/admin/login') {\r\n    const token = request.cookies.get('auth_token')?.value;\r\n    \r\n    if (token) {\r\n      try {\r\n        verify(\r\n          token,\r\n          process.env.JWT_SECRET || 'default-secret-key'\r\n        );\r\n        \r\n        return NextResponse.redirect(new URL('/admin', request.url));\r\n      } catch (error) {\r\n        // Token geçersizse cookie'yi temizle\r\n        const response = NextResponse.next();\r\n        response.cookies.delete('auth_token');\r\n        return response;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return NextResponse.next();\r\n}\r\n\r\n// Middleware'in hangi yollar için çalışacağını belirt\r\nexport const config = {\r\n  matcher: ['/admin/:path*'],\r\n}; "],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;AAGO,eAAe,WAAW,OAAoB;IACnD,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,2BAA2B;IAC3B,IAAI,KAAK,UAAU,CAAC,aAAa,SAAS,gBAAgB;QACxD,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;QAEjD,wCAAwC;QACxC,IAAI,CAAC,OAAO;YACV,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,QAAQ,GAAG;QAClE;QAEA,IAAI;YACF,wBAAwB;YACxB,CAAA,GAAA,6IAAA,CAAA,SAAM,AAAD,EACH,OACA,QAAQ,GAAG,CAAC,UAAU,IAAI;YAG5B,4BAA4B;YAC5B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;QAC1B,EAAE,OAAO,OAAO;YACd,6CAA6C;YAC7C,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,QAAQ,GAAG;QAClE;IACF;IAEA,uEAAuE;IACvE,IAAI,SAAS,gBAAgB;QAC3B,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe;QAEjD,IAAI,OAAO;YACT,IAAI;gBACF,CAAA,GAAA,6IAAA,CAAA,SAAM,AAAD,EACH,OACA,QAAQ,GAAG,CAAC,UAAU,IAAI;gBAG5B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;YAC5D,EAAE,OAAO,OAAO;gBACd,qCAAqC;gBACrC,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;gBAClC,SAAS,OAAO,CAAC,MAAM,CAAC;gBACxB,OAAO;YACT;QACF;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;KAAgB;AAC5B"}}]
}